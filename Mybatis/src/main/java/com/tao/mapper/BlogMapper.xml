<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tao.mapper.BlogMapper">
    <!--不开readOnly需要序列化对象，策略，刷新间隔，最大存的引用-->
    <cache
            eviction="FIFO"
            flushInterval="60000"
            size="512"
            readOnly="true"/>

    <insert id="addBlog" parameterType="Blog">
        insert into smbms.blog (id, title, author, create_time, views)
        values (#{id},#{title},#{author},#{createTime},#{views});
    </insert>


    <select id="queryBlogIf" parameterType="map" resultType="blog">
        select *
        from smbms.blog
        <where>
            <if test="title != null">
                title = #{title}
            </if>
            <if test="author != null">
                and author = #{author}
            </if>
        </where>
    </select>


    <update id="updateBlog" parameterType="map">
        update smbms.blog
        <set>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="author != null">
                author = #{author},
            </if>
        </set>
        where id = #{id};
    </update>


    <select id="queryBlogChoose" parameterType="map" resultType="blog">
        select * from smbms.blog
        <where>
            <choose>
                <when test="title != null">
                    title = #{title}
                </when>
                <when test="author != null">
                    and author = #{author}
                </when>
                <otherwise>
                    and views = #{views}
                </otherwise>
            </choose>
        </where>
    </select>


    <select id="queryBlogForeach" parameterType="map" resultType="blog">
        select * from smbms.blog
        <where>
            <!-- collection:指定输入对象中的集合属性
            item:每次遍历生成的对象
            open:开始遍历时的拼接字符串
            close:结束时拼接的字符串
            separator:遍历对象之间需要拼接的字符串
            select * from blog where 1=1 and (id=1 or id=2 or id=3) -->
            <foreach collection="ids" item="id" open="and (" close=")" separator="or">
               id=#{id}
            </foreach>
        </where>
    </select>
</mapper>